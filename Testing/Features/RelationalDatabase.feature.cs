// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Testing.Features
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Relational database")]
    [NUnit.Framework.CategoryAttribute("Api")]
    public partial class RelationalDatabaseFeature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private static string[] featureTags = new string[] {
                "Api"};
        
#line 1 "RelationalDatabase.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features", "Relational database", null, ProgrammingLanguage.CSharp, featureTags);
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The new user is added")]
        [NUnit.Framework.TestCaseAttribute("Test", "Test", "Test", "Test", null)]
        [NUnit.Framework.TestCaseAttribute("VelScorp", "Vlad", "Kontsevich", "TestPassword", null)]
        public void TheNewUserIsAdded(string username, string firstName, string lastName, string password, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Username", username);
            argumentsOfScenario.Add("FirstName", firstName);
            argumentsOfScenario.Add("LastName", lastName);
            argumentsOfScenario.Add("Password", password);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The new user is added", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
 testRunner.When(string.Format("the user is added with the username: {0}, first name: {1}, last name: {2}, passwo" +
                            "rd: {3}", username, firstName, lastName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 6
 testRunner.Then(string.Format("the user exists with the id: 1, username: {0}, first name: {1}, last name: {2}, p" +
                            "assword: {3}", username, firstName, lastName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The user can change profile details")]
        [NUnit.Framework.TestCaseAttribute("Test", "Test", "Test", "Test", "VelScorp", "Vlad", "Kontsevich", null)]
        [NUnit.Framework.TestCaseAttribute("VelScorp", "Vlad", "Kontsevich", "TestPassword", "Test", "Test", "Test", null)]
        public void TheUserCanChangeProfileDetails(string username, string firstName, string lastName, string password, string newUsername, string newFirstName, string newLastName, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("Username", username);
            argumentsOfScenario.Add("FirstName", firstName);
            argumentsOfScenario.Add("LastName", lastName);
            argumentsOfScenario.Add("Password", password);
            argumentsOfScenario.Add("NewUsername", newUsername);
            argumentsOfScenario.Add("NewFirstName", newFirstName);
            argumentsOfScenario.Add("NewLastName", newLastName);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The user can change profile details", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 13
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 14
 testRunner.Given(string.Format("the user is added with the id: 1, username: {0}, first name: {1}, last name: {2}," +
                            " password: {3}", username, firstName, lastName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 15
 testRunner.When(string.Format("the user with an id: 1 changed username to {0}, first name to {1}, last name to {" +
                            "2}", newUsername, newFirstName, newLastName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 16
 testRunner.Then(string.Format("the user exists with the id: 1, username: {0}, first name: {1}, last name: {2}, p" +
                            "assword: {3}", newUsername, newFirstName, newLastName, password), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The new chat is added")]
        [NUnit.Framework.TestCaseAttribute("TestChat", "2", "TestUser", "1", null)]
        [NUnit.Framework.TestCaseAttribute("VelScorp", "2", "VelScorp", "2", null)]
        public void TheNewChatIsAdded(string chatName, string ownerId, string username, string userId, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("ChatName", chatName);
            argumentsOfScenario.Add("OwnerId", ownerId);
            argumentsOfScenario.Add("Username", username);
            argumentsOfScenario.Add("UserId", userId);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The new chat is added", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 23
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 24
 testRunner.Given("the user is added with the id: 1, username: TestUser, first name: Test, last name" +
                        ": Test, password: Test", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 25
  testRunner.And("the user is added with the id: 2, username: VelScorp, first name: Vlad, last name" +
                        ": Kontsevich, password: TestPassword", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "FirstName",
                            "LastName",
                            "Username"});
                table1.AddRow(new string[] {
                            "1",
                            "Test",
                            "Test",
                            "TestUser"});
                table1.AddRow(new string[] {
                            "2",
                            "VelScorp",
                            "Vlad",
                            "Kontsevich"});
#line 26
 testRunner.When(string.Format("the chat is added with the name: {0}, owner id: {1} and users:", chatName, ownerId), ((string)(null)), table1, "When ");
#line hidden
#line 30
 testRunner.Then(string.Format("the user with the id: {0}, username: {1} is a member of chat rooms: {2}", userId, username, chatName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The new message is added")]
        [NUnit.Framework.TestCaseAttribute("TestChat", "2", "TestUser", "1", null)]
        [NUnit.Framework.TestCaseAttribute("VelScorp", "2", "VelScorp", "2", null)]
        public void TheNewMessageIsAdded(string chatName, string ownerId, string username, string userId, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("ChatName", chatName);
            argumentsOfScenario.Add("OwnerId", ownerId);
            argumentsOfScenario.Add("Username", username);
            argumentsOfScenario.Add("UserId", userId);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The new message is added", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 37
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 38
 testRunner.Given("the user is added with the id: 1, username: TestUser, first name: Test, last name" +
                        ": Test, password: Test", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 39
  testRunner.And("the user is added with the id: 2, username: VelScorp, first name: Vlad, last name" +
                        ": Kontsevich, password: TestPassword", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "FirstName",
                            "LastName",
                            "Username"});
                table2.AddRow(new string[] {
                            "1",
                            "Test",
                            "Test",
                            "TestUser"});
                table2.AddRow(new string[] {
                            "2",
                            "VelScorp",
                            "Vlad",
                            "Kontsevich"});
#line 40
  testRunner.And(string.Format("the chat is added with the name: {0}, owner id: {1} and users:", chatName, ownerId), ((string)(null)), table2, "And ");
#line hidden
#line 44
 testRunner.When("the message is added with the chat id: 1, user id: 2, content: TestStringMessage," +
                        " creation date: 4/23/2023", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 45
 testRunner.Then(string.Format("the chat with id: 1, name: {0} contains messages: TestStringMessage", chatName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("The message can be read")]
        [NUnit.Framework.TestCaseAttribute("TestChat", "2", null)]
        [NUnit.Framework.TestCaseAttribute("VelScorp", "2", null)]
        public void TheMessageCanBeRead(string chatName, string ownerId, string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("ChatName", chatName);
            argumentsOfScenario.Add("OwnerId", ownerId);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("The message can be read", null, tagsOfScenario, argumentsOfScenario, featureTags);
#line 52
this.ScenarioInitialize(scenarioInfo);
#line hidden
            if ((TagHelper.ContainsIgnoreTag(tagsOfScenario) || TagHelper.ContainsIgnoreTag(featureTags)))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 53
 testRunner.Given("the user is added with the id: 1, username: TestUser, first name: Test, last name" +
                        ": Test, password: Test", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 54
  testRunner.And("the user is added with the id: 2, username: VelScorp, first name: Vlad, last name" +
                        ": Kontsevich, password: TestPassword", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
                TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                            "Id",
                            "FirstName",
                            "LastName",
                            "Username"});
                table3.AddRow(new string[] {
                            "1",
                            "Test",
                            "Test",
                            "TestUser"});
                table3.AddRow(new string[] {
                            "2",
                            "VelScorp",
                            "Vlad",
                            "Kontsevich"});
#line 55
  testRunner.And(string.Format("the chat is added with the name: {0}, owner id: {1} and users:", chatName, ownerId), ((string)(null)), table3, "And ");
#line hidden
#line 59
 testRunner.When("the message is added with the chat id: 1, user id: 2, content: TestStringMessage," +
                        " creation date: 4/23/2023", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 60
  testRunner.And("the user with the id: 1 read message with id: 1 in the chat with id: 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
 testRunner.Then("the user with the id: 1 read message with id: 1 in the chat with id: 1", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
